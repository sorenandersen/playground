service: demo-dynamodb-stream-simple

provider:
  name: aws
  runtime: nodejs12.x
  memorySize: 128
  httpApi:
    payload: '2.0'
  environment:
    LOG_LEVEL: DEBUG

functions:
  get:
    handler: functions/get.handler
    events:
      - httpApi:
          path: /leaders
          method: get
    environment:
      LEADERBOARDS_TABLE: !Ref LeaderboardsTable
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:GetItem
          - dynamodb:Scan
        Resource: !GetAtt LeaderboardsTable.Arn
  post:
    handler: functions/post.handler
    events:
      - httpApi:
          path: /games
          method: post
    environment:
      GAME_EVENTS_TABLE: !Ref GameEventsTable
    iamRoleStatements:
      - Effect: Allow
        Action: dynamodb:PutItem
        Resource: !GetAtt GameEventsTable.Arn
  streamProcessor:
    handler: functions/stream-processor.handler
    events:
      - stream:
          type: dynamodb
          batchSize: 100
          enabled: true
          arn: !GetAtt GameEventsTable.StreamArn
    environment:
      LEADERBOARDS_TABLE: !Ref LeaderboardsTable
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:PutItem
          - dynamodb:UpdateItem
        Resource: !GetAtt LeaderboardsTable.Arn
resources:
  Resources:
    GameEventsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        BillingMode: PAY_PER_REQUEST
        StreamSpecification:
          StreamViewType: NEW_IMAGE
        AttributeDefinitions:
          - AttributeName: gameRoundId
            AttributeType: S
        KeySchema:
          - AttributeName: gameRoundId
            KeyType: HASH
    LeaderboardsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: playerId
            AttributeType: S
        KeySchema:
          - AttributeName: playerId
            KeyType: HASH
  Outputs:
    GameEventsTableName:
      Value: !Ref GameEventsTable
      Description: 'DynamoDB table'
    LeaderboardsTableName:
      Value: !Ref LeaderboardsTable
      Description: 'DynamoDB table'

plugins:
  - serverless-iam-roles-per-function
