service: demo-eventbridge-lambda-simple

provider:
  name: aws
  runtime: nodejs12.x
  memorySize: 128
  stage: ${opt:stage, "dev"}
  httpApi:
    payload: '2.0'
  environment:
    LOG_LEVEL: DEBUG

functions:
  endpoint:
    handler: functions/endpoint.handler
    events:
      - httpApi:
          path: /
          method: post
    environment:
      EVENT_BUS_NAME: !Ref CustomBus
    iamRoleStatements:
      - Effect: Allow
        Action: events:PutEvents
        Resource: ${self:custom.eventBus.arn}
  translate:
    handler: functions/translate.handler
    events:
      - eventBridge:
          eventBus: ${self:custom.eventBus.arn}
          pattern:
            source:
              - demo.eventbridge.text-endpoint
            detail-type:
              - translate
    iamRoleStatements:
      - Effect: Allow
        Action:
          - translate:TranslateText
          - comprehend:DetectDominantLanguage
        Resource: '*'
  sentiment:
    handler: functions/sentiment.handler
    events:
      - eventBridge:
          eventBus: ${self:custom.eventBus.arn}
          pattern:
            source:
              - demo.eventbridge.text-endpoint
            detail-type:
              - sentiment
    iamRoleStatements:
      - Effect: Allow
        Action: comprehend:DetectSentiment
        Resource: '*'

custom:
  eventBus:
    name: ${self:service.name}-bus-${self:provider.stage}
    arn: arn:aws:events:#{AWS::Region}:#{AWS::AccountId}:event-bus/${self:custom.eventBus.name}

resources:
  Resources:
    CustomBus:
      Type: AWS::Events::EventBus
      Properties:
        Name: ${self:custom.eventBus.name}

  Outputs:
    CustomBusName:
      Value: !Ref CustomBus
      Description: 'Resource: Event Bus'

plugins:
  - serverless-iam-roles-per-function
  - serverless-pseudo-parameters
